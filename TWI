# Load libraries
library(terra)
library(whitebox)

# Set path to your DEM file (GeoTIFF format)
dem_file <- "DEM.tif" 
temp_dem <- "temp_dem.tif" 
filled_dem_file <- "filled_dem.tif" 
flow_dir_file <- "flow_dir.tif" 
flow_accum_file <- "flow_acc.tif"  

1. Dem visuliztion

# Load the DEM
dem <- rast(dem_file)

# Plot the DEM
plot(dem, main = "DEM", col = terrain.colors(100))


2. Fill the DEM

# Write to disk for WhiteboxTools (must be file-based)
writeRaster(dem, temp_dem, overwrite = TRUE)

# Run Whitebox Fill Depressions tool
wbt_fill_depressions(
  dem = temp_dem,
  output = filled_dem,
  verbose = TRUE
)

# Load the filled DEM back into R
filled <- rast(filled_dem)

# Plot the filled DEM
plot(filled, main = "Filled DEM", col = terrain.colors(100))

3. Calculate Flow Direction

# Run WhiteboxTools to calculate flow direction (D8 method)
wbt_d8_pointer(
  dem = filled_dem_file,
  output = flow_dir_file,
  verbose = TRUE
)

# Load the flow direction raster
flow_dir <- rast(flow_dir_file)

# Plot the flow direction result
plot(flow_dir, main = "Flow Direction (D8)", col = topo.colors(100))

4. Compute Flow Accumulation
wbt_d8_flow_accumulation(
  input = flow_dir_file,
  output = flow_accum_file,
  out_type = "cells",   # 'cells' counts the number of contributing cells
  verbose = TRUE
)

# Load the flow accumulation raster
flow_accum <- rast(flow_accum_file)

# Plot the flow accumulation result
plot(flow_accum, main = "Flow Accumulation", col = rev(terrain.colors(100)))

5. Determine Slope

# Calculate slope in degrees using WhiteboxTools
wbt_slope(
  dem = filled_dem_file,
  output = slope_file,
  zfactor = 1.0,       # Elevation units are already in meters, so z-factor is 1
  units = "degrees",   # Output in degrees
  verbose = TRUE
)

# Load the slope raster
slope_deg <- rast(slope_file)

# Plot the slope in degrees
plot(slope_deg, main = "Slope (Degrees)", col = terrain.colors(100))

6. Convert Slope to Radians

# Convert slope from degrees to radians
slope_rad <- slope_deg * (pi / 180)

# Plot the slope in radians
plot(slope_rad, main = "Slope (Radians)", col = terrain.colors(100))

7. Calculate the Tangent of the Slope

# Calculate the tangent of the slope in radians
tan_slope <- tan(slope_rad)

# Plot the tangent of the slope
plot(tan_slope, main = "Tangent of Slope", col = terrain.colors(100))

8. Adjust Flow Accumulation

# Add 1 to each cell in the flow accumulation raster
adjusted_flow_accum <- flow_accum + 1

# Plot the adjusted flow accumulation
plot(adjusted_flow_accum, main = "Adjusted Flow Accumulation", col = rev(terrain.colors(100)))

9. Compute Topographic Wetness Index (TWI)

# Compute the Topographic Wetness Index
twi <- log(adjusted_flow_accum / tan_slope)

# Plot the TWI
plot(twi, main = "Topographic Wetness Index (TWI)", col = rev(terrain.colors(100)))

10. Clip TWI Raster to Shapefile

# Load the shapefile for Ratnapura District
rathnapura <- vect("rathnapura district.shp")

# Reproject shapefile to match TWI raster CRS (if needed)
rathnapura <- project(rathnapura, twi)

# Load the clipped TWI raster (if not already in session)
twi_clipped <- rast("twi_rathnapura.tif")

# Load TWI raster
twi_rathnapura <- rast("twi_rathnapura.tif")
rathnapura <- project(rathnapura, twi_rathnapura)

# Convert raster to dataframe
twi_df <- as.data.frame(twi_rathnapura, xy = TRUE)
colnames(twi_df) <- c("longitude", "latitude", "twi")

# Classify TWI using Jenks breaks
breaks_twi <- classIntervals(twi_df$twi, n = num_intervals, style = "jenks")$brks
labels_twi <- paste(round(breaks_twi[-length(breaks_twi)], 2), round(breaks_twi[-1], 2), sep = " - ")
twi_df$interval <- cut(twi_df$twi, breaks = breaks_twi, labels = labels_twi)
twi_df <- twi_df[!is.na(twi_df$interval), ]

# Color palette
twi_colors <- rev(brewer.pal(num_intervals, "RdYlGn"))


# Plot TWI
ggplot() +
  geom_raster(data = twi_df, aes(x = longitude, y = latitude, fill = interval)) +
  geom_sf(data = st_as_sf(rathnapura), fill = NA, color = "black", size = 0.5) +
  scale_fill_manual(values = twi_colors, name = "TWI", labels = labels_twi) +
  coord_sf(expand = FALSE) +
  theme_minimal() +
  labs(title = "Topographic Wetness Index (TWI) â€“ Ratnapura District") +
  theme(
    panel.grid.major = element_line(color = "grey", size = 0.4),
    panel.grid.minor = element_blank(),
    axis.text.x = element_text(size = 8),
    axis.text.y = element_text(size = 8),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    legend.position = "right"
  )



